#!/usr/bin/env bash

PROGNAME="${0##*/}"
usage() {
		echo "$PROGNAME"
		echo "  Analyzes the interval-decomposability of a collection of commutative grid representations."    
		echo ""
		echo "WARNINGS:"
		echo " 1. This script uses very general algorithms, and is not the most efficient"
		echo "    way of determining interval-decomposability. DO NOT USE WITH LARGE INPUT."		
    echo ""
		echo "USAGE:"
		echo " $PROGNAME [-h] <inputs>"
		echo "  -h                 Show this help."
		echo "  <inputs>           Multiple inputs containing data about persistence module to decompose."
		echo ""
		echo "INPUTS:"
		echo "  The expected input are json files containing the representations."
		echo "  While they can be manually created, this program is created with the"
		echo "  idea of taking the output from pmgap program 'pmgap_cmplx2repn'."
		echo ""
		echo "This program is distributed in the hope that it will be useful,"
    echo "but WITHOUT ANY WARRANTY; without even the implied warranty of"
    echo "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the"
    echo "GNU General Public License for more details."
}

# [ $# -eq 0 ] && usage

while getopts "h" o; do
		case "${o}" in		     
				h | *) # Display help.
						usage
						exit 0
						;;
		esac
done

shift $((OPTIND-1))

if [ -z "$1" ]; then
		echo "Error: No input supplied. Run again with option -h to show help."
		exit 1
fi

# saveIFS=$IFS
# IFS=","
# args="${*:1}"
# IFS=$saveIFS
# echo "$args"

for PARAM in "$@"
do
  PARAMS="${PARAMS},\"${PARAM}\""
done
PARAMS=`echo $PARAMS | sed s/^,//`

__CODE="
files := [$PARAMS];;
L:=JsonFilesToCommGridRepn(files);;
for i in [1..Length(L)] do
V := L[i];
Display(files[i]);
Display(DimensionVector(V));
Display(IntervalPartDimVec(V));
Display(IsIntervalDecomposable(V));
od;
"

echo "$__CODE"
echo "$__CODE"  | gap -o 8G -q  @gapscriptsdir@/loader.g
